Warning[w6]: Type conflict for external/entry "adcbuf", in module func_handle against external/entry in module adc; array types have different sizes
  /* In module func_handle: */
  unsigned char adcbuf[1000];
  /* In module adc: */
  unsigned char adcbuf[501];
################################################################################
#                                                                              #
#      IAR Universal Linker V4.60I/386                                         #
#                                                                              #
#           Link time     =  02/Jan/2011  20:01:04                             #
#           Target CPU    =  A90                                               #
#           List file     =  D:\current_prj\batt\BATT_emb\Debug\List\zc_emb.ma #
#                            p                                                 #
#           Output file 1 =  D:\current_prj\batt\BATT_emb\Debug\Exe\zc_emb.dbg #
#                            Format: debug                                     #
#                            UBROF version 10.0.2                              #
#           Output file 2 =  D:\current_prj\batt\BATT_emb\Debug\Exe\zi_emb.hex #
#                            Format: intel-standard                            #
#           Command line  =  D:\current_prj\batt\BATT_emb\Debug\Obj\adc.r90    #
#                            D:\current_prj\batt\BATT_emb\Debug\Obj\coms.r90   #
#                            D:\current_prj\batt\BATT_emb\Debug\Obj\crc.r90    #
#                            D:\current_prj\batt\BATT_emb\Debug\Obj\func_handl #
#                            e.r90                                             #
#                            D:\current_prj\batt\BATT_emb\Debug\Obj\hist.r90   #
#                            D:\current_prj\batt\BATT_emb\Debug\Obj\main.r90   #
#                            D:\current_prj\batt\BATT_emb\byte_stuff.r90       #
#                            D:\current_prj\batt\BATT_emb\timeservice.r90 -o   #
#                            D:\current_prj\batt\BATT_emb\Debug\Exe\zc_emb.dbg #
#                            -Fubrof -l                                        #
#                            D:\current_prj\batt\BATT_emb\Debug\List\zc_emb.ma #
#                            p                                                 #
#                            -xmo                                              #
#                            "-IC:\Program Files\IAR Systems\Embedded Workbenc #
#                            h 4.0 Evaluation\avr\LIB\"                        #
#                            -f                                                #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            4.0 Evaluation\avr\src\template\cfgm128.xcl"      #
#                            (-D_..X_INTVEC_SIZE=8C -D_..X_FLASH_NEND=FFFF     #
#                            -D_..X_FLASH_END=1FFFF -D_..X_SRAM_BASE=100       #
#                            -D_..X_SRAM_TBASE=0 -D_..X_SRAM_TSIZE=0           #
#                            -D_..X_SRAM_END=10FF -D_..X_EEPROM_END=FFF        #
#                            -D_..X_EEPROM_START=0) -D_..X_HEAP_SIZE=10        #
#                            -D_..X_TINY_HEAP_SIZE=0 -D_..X_NEAR_HEAP_SIZE=0   #
#                            -D_..X_FAR_HEAP_SIZE=0 -D_..X_HUGE_HEAP_SIZE=0    #
#                            -D_..X_CSTACK_SIZE=80 -D_..X_RSTACK_SIZE=28 -f    #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            4.0 Evaluation\avr\src\template\cfg3s.xcl"        #
#                            (-ca90 -w29                                       #
#                            -Z(CODE)INTVEC=0-(_..X_INTVEC_SIZE-1)             #
#                            -Z(CODE)TINY_F=_..X_FLASH_BASE-FF                 #
#                            -Z(CODE)NEAR_F=_..X_FLASH_BASE-_..X_FLASH_NEND    #
#                            -Z(CODE)SWITCH=_..X_FLASH_BASE-_..X_FLASH_NEND    #
#                            -Z(CODE)DIFUNCT=_..X_FLASH_BASE-_..X_FLASH_NEND   #
#                            -Z(CODE)CODE=_..X_FLASH_BASE-_..X_FLASH_END       #
#                            -Z(CODE)FAR_F=[_..X_FLASH_BASE-_..X_FLASH_END]/10 #
#                            000                                               #
#                            -Z(CODE)INITTAB=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)HUGE_F=_..X_FLASH_BASE-_..X_FLASH_END     #
#                            -Z(CODE)TINY_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)NEAR_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)CHECKSUM#_..X_FLASH_END                   #
#                            -Z(DATA)TINY_I,TINY_Z,TINY_N=_..X_SRAM_TBASE:+_.. #
#                            X_SRAM_TSIZE                                      #
#                            -Z(DATA)CSTACK+_..X_CSTACK_SIZE=_..X_CSTACK_BASE- #
#                            _..X_CSTACK_END                                   #
#                            -Z(DATA)HEAP+_..X_HEAP_SIZE=_..X_SRAM_BASE-_..X_S #
#                            RAM_END,_..X_EXT_SRAM_BASE:+_..X_EXT_SRAM_SIZE    #
#                            -Z(DATA)IOSTREAM_N#_..X_SRAM_BASE-_..X_SRAM_END,_ #
#                            ..X_EXT_SRAM_BASE:+_..X_EXT_SRAM_SIZE             #
#                            -Z(DATA)NEAR_HEAP+_..X_NEAR_HEAP_SIZE=_..X_SRAM_B #
#                            ASE-_..X_SRAM_END,_..X_EXT_SRAM_BASE:+_..X_EXT_SR #
#                            AM_SIZE                                           #
#                            -Z(DATA)RSTACK+_..X_RSTACK_SIZE=_..X_RSTACK_BASE- #
#                            _..X_RSTACK_END                                   #
#                            -Z(DATA)NEAR_I,NEAR_Z=_..X_SRAM_BASE-_..X_SRAM_EN #
#                            D,_..X_EXT_SRAM_BASE:+_..X_EXT_SRAM_SIZE          #
#                            -Z(DATA)NEAR_C=_..X_EXT_ROM_BASE:+_..X_EXT_ROM_SI #
#                            ZE                                                #
#                            -Z(DATA)NEAR_N=_..X_EXT_NV_BASE:+_..X_EXT_NV_SIZE #
#                            -Z(XDATA)EEPROM_I,EEPROM_N=_..X_EEPROM_START-_..X #
#                            _EEPROM_END)                                      #
#                            -D_..X_FLASH_BASE=_..X_INTVEC_SIZE -H1895         #
#                            -h(CODE)0-(_..X_INTVEC_SIZE-1)                    #
#                            -D_..X_EXT_SRAM_BASE=_..X_SRAM_END                #
#                            -D_..X_EXT_SRAM_SIZE=0                            #
#                            -D_..X_EXT_ROM_BASE=_..X_SRAM_END                 #
#                            -D_..X_EXT_ROM_SIZE=0                             #
#                            -D_..X_EXT_NV_BASE=_..X_SRAM_END                  #
#                            -D_..X_EXT_NV_SIZE=0                              #
#                            -D_..X_CSTACK_BASE=_..X_SRAM_BASE                 #
#                            -D_..X_CSTACK_END=_..X_SRAM_END                   #
#                            -D_..X_RSTACK_BASE=_..X_SRAM_BASE                 #
#                            -D_..X_RSTACK_END=_..X_SRAM_END                   #
#                            -Ointel-standard=D:\current_prj\batt\BATT_emb\Deb #
#                            ug\Exe\zi_emb.hex                                 #
#                            -s __program_start                                #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            4.0 Evaluation\avr\LIB\CLIB\cl3s-ec_mul.r90"      #
#                            -e_small_write=_formatted_write                   #
#                            -e_medium_read=_formatted_read                    #
#                                                                              #
#                        Copyright 1987-2007 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      00000000  Relocatable, from module : ?RESET




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  R10             = REG
  R11             = REG
  R4              = REG
  R5              = REG
  R6              = REG
  R7              = REG
  R8              = REG
  R9              = REG
  __64bit_doubles = disabled
  __cpu           = 3
  __cpu_name      = ATmega128
  __enhanced_core = enabled
  __has_elpm      = true
  __memory_model  = 2
  __no_rampd      = enabled
  __rt_version    = 3



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _..X_RSTACK_END         000010FF 
           _..X_RSTACK_BASE        00000100 
           _..X_CSTACK_END         000010FF 
           _..X_CSTACK_BASE        00000100 
           _..X_EXT_NV_SIZE        00000000 
           _..X_EXT_NV_BASE        000010FF 
           _..X_EXT_ROM_SIZE       00000000 
           _..X_EXT_ROM_BASE       000010FF 
           _..X_EXT_SRAM_SIZE      00000000 
           _..X_EXT_SRAM_BASE      000010FF 
           _..X_FLASH_BASE         0000008C 
           _..X_RSTACK_SIZE        00000028 
           _..X_CSTACK_SIZE        00000080 
           _..X_HUGE_HEAP_SIZE     00000000 
           _..X_FAR_HEAP_SIZE      00000000 
           _..X_NEAR_HEAP_SIZE     00000000 
           _..X_TINY_HEAP_SIZE     00000000 
           _..X_HEAP_SIZE          00000010 
           _..X_EEPROM_START       00000000 
           _..X_EEPROM_END         00000FFF 
           _..X_SRAM_END           000010FF 
           _..X_SRAM_TSIZE         00000000 
           _..X_SRAM_TBASE         00000000 
           _..X_SRAM_BASE          00000100 
           _..X_FLASH_END          0001FFFF 
           _..X_FLASH_NEND         0000FFFF 
           _..X_INTVEC_SIZE        0000008C 
    *************************************************************************

  FILE NAME : D:\current_prj\batt\BATT_emb\Debug\Obj\adc.r90
  PROGRAM MODULE, NAME : adc

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 00000024 - 00000025 (0x2 bytes), align: 0
  Segment part 1.             Intra module refs:   ADC_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_ADC                  00000024 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000026 - 00000026 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   ADC_isr
                                                   adcini
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_ADCSR                00000026 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000027 - 00000027 (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   adcini
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_ADMUX                00000027 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000001AB - 000001BA (0x10 bytes), align: 0
  Segment part 14.            Intra module refs:   adcini
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           maxsummcnt              000001AB 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000001BB - 000001BB (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   adcini
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           chn                     000001BB 
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 000001A8 - 000001A9 (0x2 bytes), align: 0
  Segment part 16.            Intra module refs:   ADC_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           samplecnt               000001A8 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000001BC - 000001BF (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   ADC_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sumadc                  000001BC 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000001C0 - 000003B4 (0x1f5 bytes), align: 0
  Segment part 20.            Intra module refs:   ADC_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           adcbuf                  000001C0        getledstate (func_handle)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000003B5 - 000003B6 (0x2 bytes), align: 0
  Segment part 21.            Intra module refs:   ADC_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bufcnt                  000003B5        getledstate (func_handle)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000002B6 - 00000401 (0x14c bytes), align: 1
  Segment part 22.            Intra module refs:   ADC_isr::??INTVEC 84
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADC_isr                 000002B6 
               interrupt function
               stack 1 = 00000000 ( 00000014 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000402 - 00000437 (0x36 bytes), align: 1
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           adcini                  00000402        main (main)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000057 (0x58 bytes), align: 1
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADC_isr::??INTVEC 84    00000054 
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 000014C6 - 000014CC (0x7 bytes), align: 0
  Segment part 12.            Intra module refs:   adcbuf
                                                   answerb (coms)
                                                   bufcnt
                                                   chn
                                                   closing::state (main)
                                                   cmd_active (func_handle)
                                                   fnum (func_handle)
                                                   hist (hist)
                                                   l_avg (func_handle)
                                                   l_cnt (func_handle)
                                                   l_max (func_handle)
                                                   l_samples (func_handle)
                                                   ledstate (func_handle)
                                                   maxsummcnt
                                                   need_portgsel (coms)
                                                   oldportg (coms)
                                                   openreq (main)
                                                   rec0ctx (coms)
                                                   sbuf (coms)
                                                   sen0ctx (coms)
                                                   sendbuf (coms)
                                                   sumadc
                                                   time (timeservice)
                                                   touttable (timeservice)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   000014C6 
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 000014D4 - 000014D5 (0x2 bytes), align: 0
  Segment part 17.            Intra module refs:   samplecnt
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 000014CD - 000014D3 (0x7 bytes), align: 0
  Segment part 18.            Intra module refs:   adr (coms)
                                                   samplecnt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_I>
                                   000014CD 

    *************************************************************************

  FILE NAME : D:\current_prj\batt\BATT_emb\Debug\Obj\coms.r90
  PROGRAM MODULE, NAME : coms

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 00000023 - 00000023 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   main (main)
                                                   req0handle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTE                00000023 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000029 - 00000029 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   iniuart0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UBRR0L               00000029 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000002A - 0000002A (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   inisendfrm
                                                   iniuart0
                                                   req0handle
                                                   rx0_isr
                                                   sendexept
                                                   tx0_isr
                                                   tx0end_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR0B               0000002A 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000002B - 0000002B (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   iniuart0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR0A               0000002B 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000002C - 0000002C (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   rx0_isr
                                                   tx0_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UDR0                 0000002C 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000035 - 00000035 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   req0handle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTC                00000035 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000038 - 00000038 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   req0handle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTB                00000038 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000003B - 0000003B (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   closing (main)
                                                   req0handle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTA                0000003B 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000004A - 0000004B (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   Init (main)
                                                   rx0_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR1A                0000004A 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000004C - 0000004D (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   rx0_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCNT1                0000004C 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000056 - 00000056 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   Init (main)
                                                   rx0_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TIFR                 00000056 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000062 - 00000062 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   rx0_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTF                00000062 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000065 - 00000065 (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   closing (main)
                                                   delayed_func
                                                   req0handle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTG                00000065 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000090 - 00000090 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   iniuart0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UBRR0H               00000090 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000095 - 00000095 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   iniuart0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR0C               00000095 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000009A - 0000009A (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   tx0end_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR1B               0000009A 
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 000001AA - 000001AA (0x1 bytes), align: 0
  Segment part 29.            Intra module refs:   inisendfrm
                                                   req0handle
                                                   sendexept
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           adr                     000001AA 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000003B7 - 000005B9 (0x203 bytes), align: 0
  Segment part 32.            Intra module refs:   inisendfrm
                                                   iniuart0
                                                   req0handle
                                                   rx0_isr
                                                   sendack
                                                   sendexept
                                                   tx0end_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rec0ctx                 000003B7 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000438 - 0000050B (0xd4 bytes), align: 1
  Segment part 40.            Intra module refs:   Segment part 54
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           iniuart0                00000438        main (main)
               calls direct
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000050C - 0000056D (0x62 bytes), align: 1
  Segment part 41.            Intra module refs:   tx0end_isr::??INTVEC 80
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tx0end_isr              0000050C 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 00000010 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000056E - 000005F7 (0x8a bytes), align: 1
  Segment part 42.            Intra module refs:   rx0_isr::??INTVEC 72
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rx0_isr                 0000056E 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 00000011 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000005BA - 000005BE (0x5 bytes), align: 0
  Segment part 34.            Intra module refs:   inisendfrm
                                                   sendexept
                                                   tx0_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sen0ctx                 000005BA 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000005F8 - 0000067F (0x88 bytes), align: 1
  Segment part 43.            Intra module refs:   tx0_isr::??INTVEC 76
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tx0_isr                 000005F8 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 00000011 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000680 - 000006E9 (0x6a bytes), align: 1
  Segment part 44.            Intra module refs:   req0handle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           chkfrm                  00000680 
               calls direct
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000005BF - 000009C0 (0x402 bytes), align: 0
  Segment part 35.            Intra module refs:   sendexept
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sbuf                    000005BF 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000006EA - 00000707 (0x1e bytes), align: 1
  Segment part 45.            Intra module refs:   sendexept
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _copy                   000006EA 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000708 - 000007B9 (0xb2 bytes), align: 1
  Segment part 46.            Intra module refs:   req0handle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sendexept               00000708 
               calls direct
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000007BA - 0000083F (0x86 bytes), align: 1
  Segment part 47.            Intra module refs:   req0handle
                                                   sendack
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           inisendfrm              000007BA 
               calls direct
               stack 1 = 00000000 ( 00000006 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000009C1 - 00000DC0 (0x400 bytes), align: 0
  Segment part 36.            Intra module refs:   req0handle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sendbuf                 000009C1 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000DC1 - 00000E24 (0x64 bytes), align: 0
  Segment part 37.            Intra module refs:   req0handle
                                                   sendack
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           answerb                 00000DC1 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000E25 - 00000E25 (0x1 bytes), align: 0
  Segment part 38.            Intra module refs:   delayed_func
                                                   req0handle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           oldportg                00000E25 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000E26 - 00000E26 (0x1 bytes), align: 0
  Segment part 39.            Intra module refs:   delayed_func
                                                   req0handle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           need_portgsel           00000E26 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000840 - 0000085F (0x20 bytes), align: 1
  Segment part 51.            Intra module refs:   req0handle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sendack                 00000840 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000860 - 00000B0D (0x2ae bytes), align: 1
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           req0handle              00000860        idle (func_handle)
                                                   main (main)
               calls direct
               stack 1 = 00000000 ( 00000008 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000B0E - 00000B2F (0x22 bytes), align: 1
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delayed_func            00000B0E        idle (func_handle)
                                                   main (main)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000004B (0x4c bytes), align: 1
  Segment part 24. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rx0_isr::??INTVEC 72    00000048 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000004F (0x50 bytes), align: 1
  Segment part 25. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tx0_isr::??INTVEC 76    0000004C 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000053 (0x54 bytes), align: 1
  Segment part 26. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tx0end_isr::??INTVEC 80
                                   00000050 
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 000014D6 - 000014D6 (0x1 bytes), align: 0
  Segment part 30.            Intra module refs:   adr
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 0000028C - 000002A5 (0x1a bytes), align: 1
  Segment part 54.            Intra module refs:   iniuart0

    *************************************************************************

  FILE NAME : D:\current_prj\batt\BATT_emb\Debug\Obj\crc.r90
  PROGRAM MODULE, NAME : crc

  SEGMENTS IN THE MODULE
  ======================
NEAR_F
  Relative segment, address: CODE 0000008C - 0000018B (0x100 bytes), align: 0
  Segment part 7.             Intra module refs:   getcrc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           auchCRCHi               0000008C 
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000018C - 0000028B (0x100 bytes), align: 0
  Segment part 8.             Intra module refs:   getcrc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           auchCRCLo               0000018C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000B30 - 00000B79 (0x4a bytes), align: 1
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           getcrc                  00000B30        chkfrm (coms)
                                                   inisendfrm (coms)
                                                   sendexept (coms)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : D:\current_prj\batt\BATT_emb\Debug\Obj\func_handle.r90
  PROGRAM MODULE, NAME : func_handle

  SEGMENTS IN THE MODULE
  ======================
NEAR_Z
  Relative segment, address: DATA 00000E27 - 00000E27 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   getledstate_req
                                                   performcmd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cmd_active              00000E27        req0handle (coms)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000E28 - 00000E28 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   getledstate_req
                                                   performcmd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fnum                    00000E28 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000B7A - 00000B93 (0x1a bytes), align: 1
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           getledstate_req         00000B7A        req0handle (coms)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000B94 - 00000BB9 (0x26 bytes), align: 1
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           performcmd              00000B94        main (main)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000BBA - 00000BC3 (0xa bytes), align: 1
  Segment part 20.            Intra module refs:   getledstate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           idle                    00000BBA 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000E29 - 00000E29 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   getledstate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ledstate                00000E29        req0handle (coms)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000E2A - 00000E2A (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   getledstate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l_avg                   00000E2A        req0handle (coms)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000E2B - 00000E2B (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   getledstate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l_cnt                   00000E2B        req0handle (coms)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000E2C - 00000E2C (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   getledstate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l_max                   00000E2C        req0handle (coms)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000E2D - 00000E2E (0x2 bytes), align: 0
  Segment part 17.            Intra module refs:   getledstate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l_samples               00000E2D        req0handle (coms)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000BC4 - 00000BD3 (0x10 bytes), align: 1
  Segment part 21.            Intra module refs:   getledstate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           iabs                    00000BC4 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000BD4 - 00000D93 (0x1c0 bytes), align: 1
  Segment part 22.            Intra module refs:   performcmd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           getledstate             00000BD4 
               calls direct
               stack 1 = 00000000 ( 0000000C )
               stack 2 = 00000000 ( 00000004 )

    *************************************************************************

  FILE NAME : D:\current_prj\batt\BATT_emb\Debug\Obj\hist.r90
  PROGRAM MODULE, NAME : hist

  SEGMENTS IN THE MODULE
  ======================
NEAR_Z
  Relative segment, address: DATA 00000E2F - 00000EFC (0xce bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hist                    00000E2F        main (main)
                                                   req0handle (coms)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D94 - 00000D95 (0x2 bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           addh                    00000D94        inisend (byte_stuff)
                                                   inisendfrm (coms)
                                                   req0handle (coms)
                                                   tx0_isr (coms)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : D:\current_prj\batt\BATT_emb\Debug\Obj\main.r90
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 00000022 - 00000022 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   iniports
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRE                 00000022 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000034 - 00000034 (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   iniports
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRC                 00000034 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000037 - 00000037 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   iniports
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRB                 00000037 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000003A - 0000003A (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   iniports
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRA                 0000003A 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000041 - 00000041 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_WDTCR                00000041 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000004E - 0000004E (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR1B               0000004E 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000004F - 0000004F (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR1A               0000004F 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000064 - 00000064 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   iniports
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRG                 00000064 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000086 - 00000087 (0x2 bytes), align: 0
  Segment part 14.            Intra module refs:   Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR3A                00000086 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000088 - 00000089 (0x2 bytes), align: 0
  Segment part 15.            Intra module refs:   Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCNT3                00000088 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000008A - 0000008A (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR3B               0000008A 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000008B - 0000008B (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR3A               0000008B 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D96 - 00000DBF (0x2a bytes), align: 1
  Segment part 28.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delayloop               00000D96 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000DC0 - 00000DD7 (0x18 bytes), align: 1
  Segment part 29.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           iniports                00000DC0 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000DD8 - 00000E11 (0x3a bytes), align: 1
  Segment part 30.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Init                    00000DD8 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000EFD - 00000EFD (0x1 bytes), align: 0
  Segment part 26.            Intra module refs:   closing
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           openreq                 00000EFD 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000E12 - 00000EF7 (0xe6 bytes), align: 1
  Segment part 31.            Intra module refs:   Segment part 33
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           closing                 00000E12 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000EFE - 00000EFF (0x2 bytes), align: 0
  Segment part 27.            Intra module refs:   closing
           LOCAL                   ADDRESS         
           =====                   =======         
           closing::state          00000EFE 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000EF8 - 00000F5D (0x66 bytes), align: 1
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    00000EF8        ?cstartup_call_main (?C_STARTUP)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 000002A6 - 000002B5 (0x10 bytes), align: 1
  Segment part 33.            Intra module refs:   closing

    *************************************************************************

  FILE NAME : D:\current_prj\batt\BATT_emb\byte_stuff.r90
  PROGRAM MODULE, NAME : byte_stuff

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000F5E - 00000F73 (0x16 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           inirec                  00000F5E        inisendfrm (coms)
                                                   iniuart0 (coms)
                                                   req0handle (coms)
                                                   tx0end_isr (coms)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000F74 - 00000FA1 (0x2e bytes), align: 1
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           inisend                 00000F74        inisendfrm (coms)
                                                   sendexept (coms)
               calls direct
               stack 1 = 00000000 ( 00000006 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000FA2 - 00001085 (0xe4 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           getnextch               00000FA2        tx0_isr (coms)
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001086 - 00001185 (0x100 bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           recnextch               00001086        rx0_isr (coms)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : D:\current_prj\batt\BATT_emb\timeservice.r90
  PROGRAM MODULE, NAME : timeservice

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 00000051 - 00000051 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   initime
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR0                 00000051 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000053 - 00000053 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   initime
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR0                00000053 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000057 - 00000057 (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   initime
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TIMSK                00000057 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000F00 - 00000F01 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   initime
                                                   settout
                                                   t0_comp_isr
                                                   toutexpired
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           time                    00000F00 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001186 - 000011C1 (0x3c bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           initime                 00001186        main (main)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000011C2 - 000011FD (0x3c bytes), align: 1
  Segment part 16.            Intra module refs:   t0_comp_isr::??INTVEC 60
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           t0_comp_isr             000011C2 
               interrupt function
               stack 1 = 00000000 ( 00000006 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000F02 - 00000F0D (0xc bytes), align: 0
  Segment part 13.            Intra module refs:   initime
                                                   settout
                                                   toutexpired
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           touttable               00000F02 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000011FE - 00001225 (0x28 bytes), align: 1
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           settout                 000011FE        closing (main)
                                                   req0handle (coms)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001226 - 000012B1 (0x8c bytes), align: 1
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           toutexpired             00001226        closing (main)
                                                   delayed_func (coms)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000003F (0x40 bytes), align: 1
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           t0_comp_isr::??INTVEC 60
                                   0000003C 

    *************************************************************************

  FILE NAME : C:\Program Files\IAR Systems\Embedded Workbench 4.0 Evaluation\avr\LIB\CLIB\cl3s-ec_mul.r90
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 000012B2 - 000012B7 (0x6 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  000012B4 
           ?C_EXIT                 000012B4 
           ?C_FUNCALL              000012B2 
           _exit                   000012B2        ?cstartup_call_main (?C_STARTUP)
           exit                    000012B2        ?cstartup_call_main (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?RESET

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 00000003 (0x4 bytes), align: 1
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         00000000        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET                  00000000        Segment part 2 (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?C_STARTUP

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 000012B8, align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?C_STARTUP              000012B8        Segment part 0 (?RESET)
           __RESTART               000012B8 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000012B8 - 000012C3 (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   Segment part 2
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000012C4 - 000012C7 (0x4 bytes), align: 1
  Segment part 7.             Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_low_level_init    000012C4 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000012C8 - 000012CF (0x8 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?need_segment_init      000012C8        ?<Segment init: NEAR_I> (adc)
                                                   ?<Segment init: NEAR_Z> (adc)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000012D0 - 000012DB (0xc bytes), align: 1
  Segment part 9.             Intra module refs:   ?call_low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstartup_call_main     000012D0 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_DIVMOD_L03

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 000012DC - 00001321 (0x46 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_DIVMOD_L03          000012DC        ?SL_DIVMOD_L03 (?SL_DIVMOD_L03)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SL_DIVMOD_L03

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00001322 - 00001345 (0x24 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL_DIVMOD_L03          00001322        ADC_isr (adc)
                                                   getledstate (func_handle)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001346 - 00001355 (0x10 bytes), align: 1
  Segment part 1.             Intra module refs:   ?SL_DIVMOD_L03
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG_L03              00001346 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001356 - 00001365 (0x10 bytes), align: 1
  Segment part 2.             Intra module refs:   ?SL_DIVMOD_L03
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG_Q_L03            00001356 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xV_SWITCH_L06

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00001366 - 00001401 (0x9c bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?CV_SWITCH_L06          00001378 
           ?SV_SWITCH_L06          00001380        closing (main)
                                                   iniuart0 (coms)
           ?LV_SWITCH_L06          0000138C 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PROLOGUE_L09

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00001402 - 00001403 (0x2 bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE12_L09         00001402        getledstate (func_handle)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001404 - 00001405 (0x2 bytes), align: 1
  Segment part 5.             Intra module refs:   ?PROLOGUE12_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE11_L09         00001404 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001406 - 00001407 (0x2 bytes), align: 1
  Segment part 6.             Intra module refs:   ?PROLOGUE11_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE10_L09         00001406 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001408 - 00001409 (0x2 bytes), align: 1
  Segment part 7.             Intra module refs:   ?PROLOGUE10_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE9_L09          00001408 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000140A - 0000140B (0x2 bytes), align: 1
  Segment part 8.             Intra module refs:   ?PROLOGUE9_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE8_L09          0000140A        req0handle (coms)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000140C - 0000140D (0x2 bytes), align: 1
  Segment part 9.             Intra module refs:   ?PROLOGUE8_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE7_L09          0000140C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000140E - 0000140F (0x2 bytes), align: 1
  Segment part 10.            Intra module refs:   ?PROLOGUE7_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE6_L09          0000140E        inisend (byte_stuff)
                                                   inisendfrm (coms)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001410 - 00001411 (0x2 bytes), align: 1
  Segment part 11.            Intra module refs:   ?PROLOGUE6_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE5_L09          00001410 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001412 - 00001413 (0x2 bytes), align: 1
  Segment part 12.            Intra module refs:   ?PROLOGUE5_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE4_L09          00001412        chkfrm (coms)
                                                   getnextch (byte_stuff)
                                                   iniuart0 (coms)
                                                   sendexept (coms)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001414 - 00001415 (0x2 bytes), align: 1
  Segment part 13.            Intra module refs:   ?PROLOGUE4_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE3_L09          00001414 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001416 - 00001417 (0x2 bytes), align: 1
  Segment part 14.            Intra module refs:   ?PROLOGUE3_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE2_L09          00001416 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001418 - 00001419 (0x2 bytes), align: 1
  Segment part 15.            Intra module refs:   ?PROLOGUE2_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE1_L09          00001418 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000141A - 0000141B (0x2 bytes), align: 1
  Segment part 16.            Intra module refs:   ?PROLOGUE1_L09

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?EPILOGUE_B_L09

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000141C - 0000141D (0x2 bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B12_L09       0000141C        getledstate (func_handle)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000141E - 0000141F (0x2 bytes), align: 1
  Segment part 5.             Intra module refs:   ?EPILOGUE_B12_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B11_L09       0000141E 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001420 - 00001421 (0x2 bytes), align: 1
  Segment part 6.             Intra module refs:   ?EPILOGUE_B11_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B10_L09       00001420 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001422 - 00001423 (0x2 bytes), align: 1
  Segment part 7.             Intra module refs:   ?EPILOGUE_B10_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B9_L09        00001422 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001424 - 00001425 (0x2 bytes), align: 1
  Segment part 8.             Intra module refs:   ?EPILOGUE_B9_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B8_L09        00001424        req0handle (coms)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001426 - 00001427 (0x2 bytes), align: 1
  Segment part 9.             Intra module refs:   ?EPILOGUE_B8_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B7_L09        00001426 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001428 - 00001429 (0x2 bytes), align: 1
  Segment part 10.            Intra module refs:   ?EPILOGUE_B7_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B6_L09        00001428        inisend (byte_stuff)
                                                   inisendfrm (coms)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000142A - 0000142B (0x2 bytes), align: 1
  Segment part 11.            Intra module refs:   ?EPILOGUE_B6_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B5_L09        0000142A 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000142C - 0000142D (0x2 bytes), align: 1
  Segment part 12.            Intra module refs:   ?EPILOGUE_B5_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B4_L09        0000142C        chkfrm (coms)
                                                   getnextch (byte_stuff)
                                                   iniuart0 (coms)
                                                   sendexept (coms)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000142E - 0000142F (0x2 bytes), align: 1
  Segment part 13.            Intra module refs:   ?EPILOGUE_B4_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B3_L09        0000142E 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001430 - 00001431 (0x2 bytes), align: 1
  Segment part 14.            Intra module refs:   ?EPILOGUE_B3_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B2_L09        00001430 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001432 - 00001433 (0x2 bytes), align: 1
  Segment part 15.            Intra module refs:   ?EPILOGUE_B2_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B1_L09        00001432 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001434 - 00001441 (0xe bytes), align: 1
  Segment part 16.            Intra module refs:   ?EPILOGUE_B1_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B0_L09        00001434 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR4_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00001442, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R4_is_cg_reg
                                   00001442        ADC_isr (adc)
                                                   getledstate (func_handle)
                                                   inisend (byte_stuff)
                                                   inisendfrm (coms)
                                                   req0handle (coms)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR5_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00001442, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R5_is_cg_reg
                                   00001442        ADC_isr (adc)
                                                   getledstate (func_handle)
                                                   inisend (byte_stuff)
                                                   inisendfrm (coms)
                                                   req0handle (coms)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR6_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00001442, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R6_is_cg_reg
                                   00001442        getledstate (func_handle)
                                                   req0handle (coms)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR7_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00001442, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R7_is_cg_reg
                                   00001442        getledstate (func_handle)
                                                   req0handle (coms)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR8_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00001442, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R8_is_cg_reg
                                   00001442        getledstate (func_handle)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR10_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00001442, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R10_is_cg_reg
                                   00001442        getledstate (func_handle)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR11_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00001442, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R11_is_cg_reg
                                   00001442        getledstate (func_handle)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?low_level_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00001442 - 00001445 (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        00001442        ?call_low_level_init (?C_STARTUP)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?segment_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00001446 - 0000144D (0x8 bytes), align: 1
  Segment part 3.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __memclr                00001446 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000144E - 00001459 (0xc bytes), align: 1
  Segment part 4.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __flashcpy              0000144E 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000145A - 00001465 (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   __flashcpy
                                                   __memclr
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001466 - 000014C5 (0x60 bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __segment_init          00001466        ?need_segment_init (?C_STARTUP)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )

    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?FILLER_BYTES

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 00000057 (0x58 bytes), align: 0
  Segment part 1.
    -------------------------------------------------------------------------
?FILL1
  Relative segment, address: CODE 00000058 - 0000008B (0x34 bytes), align: 0
  Segment part 0.




                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  00000000 00000000
  01  ADC_isr
      | Stack used (prev) :  00000000 00000000
      | + function block  :  00000014 00000004
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000014 00000004


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  00000014 00000004
  02    inirec
        | Stack used (prev) :  00000014 00000004
        | + function block  :  00000000 00000002
  01  tx0end_isr
      | Stack used (prev) :  00000014 00000006
      | + function block  :  00000010 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000024 00000008


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  00000024 00000008
  02    recnextch
        | Stack used (prev) :  00000024 00000008
        | + function block  :  00000000 00000002
  01  rx0_isr
      | Stack used (prev) :  00000024 0000000A
      | + function block  :  00000011 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000035 0000000C


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  00000035 0000000C
  02    getnextch
        | Stack used (prev) :  00000035 0000000C
        | + function block  :  00000004 00000002
  02    addh
        | Stack used (prev) :  00000035 0000000C
        | + function block  :  00000000 00000002
  01  tx0_isr
      | Stack used (prev) :  00000039 0000000E
      | + function block  :  00000011 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  0000004A 00000010


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  0000004A 00000010
  01  t0_comp_isr
      | Stack used (prev) :  0000004A 00000010
      | + function block  :  00000006 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000050 00000012


  ->Sub-tree of type: Function tree
                             CSTACK   RSTACK
    | Stack used (prev) :  00000050 00000012
  02    initime
        | Stack used (prev) :  00000050 00000012
        | + function block  :  00000000 00000002
  03      toutexpired
          | Stack used (prev) :  00000050 00000012
          | + function block  :  00000000 00000002
  03      settout
          | Stack used (prev) :  00000050 00000012
          | + function block  :  00000000 00000002
  02    closing
        | Stack used (prev) :  00000050 00000014
        | + function block  :  00000000 00000002
  02    Init
        | Stack used (prev) :  00000050 00000012
        | + function block  :  00000000 00000002
  02    iniports
        | Stack used (prev) :  00000050 00000012
        | + function block  :  00000000 00000002
  02    delayloop
        | Stack used (prev) :  00000050 00000012
        | + function block  :  00000000 00000002
  04        iabs
            | Stack used (prev) :  00000050 00000012
            | + function block  :  00000000 00000002
  04        iabs
            | Stack used (prev) :  00000050 00000012
            | + function block  :  00000000 00000002
            |  Already listed
  06            toutexpired
                | Stack used (prev) :  00000050 00000012
                | + function block  :  00000000 00000002
                |  Already listed
  05          delayed_func
              | Stack used (prev) :  00000050 00000014
              | + function block  :  00000000 00000002
  06            settout
                | Stack used (prev) :  00000050 00000012
                | + function block  :  00000000 00000002
                |  Already listed
  06            inirec
                | Stack used (prev) :  00000014 00000004
                | + function block  :  00000000 00000002
                |  Already listed
  06            addh
                | Stack used (prev) :  00000035 0000000C
                | + function block  :  00000000 00000002
                |  Already listed
  06            getledstate_req
                | Stack used (prev) :  00000050 00000012
                | + function block  :  00000000 00000002
  09                  addh
                      | Stack used (prev) :  00000035 0000000C
                      | + function block  :  00000000 00000002
                      |  Already listed
  08                inisend
                    | Stack used (prev) :  00000050 00000012
                    | + function block  :  00000006 00000002
  08                inirec
                    | Stack used (prev) :  00000014 00000004
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                addh
                    | Stack used (prev) :  00000035 0000000C
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                getcrc
                    | Stack used (prev) :  00000050 00000012
                    | + function block  :  00000000 00000002
  07              inisendfrm
                  | Stack used (prev) :  00000056 00000014
                  | + function block  :  00000006 00000002
  06            sendack
                | Stack used (prev) :  0000005C 00000016
                | + function block  :  00000001 00000002
  06            sendack
                | Stack used (prev) :  0000005C 00000016
                | + function block  :  00000001 00000002
                |  Already listed
  06            sendack
                | Stack used (prev) :  0000005C 00000016
                | + function block  :  00000001 00000002
                |  Already listed
  06            inisendfrm
                | Stack used (prev) :  00000056 00000014
                | + function block  :  00000006 00000002
                |  Already listed
  06            inisendfrm
                | Stack used (prev) :  00000056 00000014
                | + function block  :  00000006 00000002
                |  Already listed
  06            inisendfrm
                | Stack used (prev) :  00000056 00000014
                | + function block  :  00000006 00000002
                |  Already listed
  06            inisendfrm
                | Stack used (prev) :  00000056 00000014
                | + function block  :  00000006 00000002
                |  Already listed
  07              inisend
                  | Stack used (prev) :  00000050 00000012
                  | + function block  :  00000006 00000002
                  |  Already listed
  07              getcrc
                  | Stack used (prev) :  00000050 00000012
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              _copy
                  | Stack used (prev) :  00000050 00000012
                  | + function block  :  00000000 00000002
  06            sendexept
                | Stack used (prev) :  00000056 00000014
                | + function block  :  00000004 00000002
  07              getcrc
                  | Stack used (prev) :  00000050 00000012
                  | + function block  :  00000000 00000002
                  |  Already listed
  06            chkfrm
                | Stack used (prev) :  00000050 00000014
                | + function block  :  00000004 00000002
  05          req0handle
              | Stack used (prev) :  0000005D 00000018
              | + function block  :  00000008 00000002
  04        idle
            | Stack used (prev) :  00000065 0000001A
            | + function block  :  00000000 00000002
  04        idle
            | Stack used (prev) :  00000065 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        idle
            | Stack used (prev) :  00000065 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        idle
            | Stack used (prev) :  00000065 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  03      getledstate
          | Stack used (prev) :  00000065 0000001C
          | + function block  :  0000000C 00000002
  02    performcmd
        | Stack used (prev) :  00000071 0000001E
        | + function block  :  00000000 00000002
  02    delayed_func
        | Stack used (prev) :  00000050 00000014
        | + function block  :  00000000 00000002
        |  Already listed
  02    req0handle
        | Stack used (prev) :  0000005D 00000018
        | + function block  :  00000008 00000002
        |  Already listed
  03      inirec
          | Stack used (prev) :  00000014 00000004
          | + function block  :  00000000 00000002
          |  Already listed
  02    iniuart0
        | Stack used (prev) :  00000050 00000012
        | + function block  :  00000004 00000002
  02    adcini
        | Stack used (prev) :  00000050 00000012
        | + function block  :  00000000 00000002
  01  main
      | Stack used (prev) :  00000071 00000020
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  00000071 00000022


  ->Sub-tree of type: Function tree
                             CSTACK   RSTACK
    | Stack used (prev) :  00000071 00000022
  01  __low_level_init
      | Stack used (prev) :  00000071 00000022
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  00000071 00000024


  ->Sub-tree of type: Function tree
                             CSTACK   RSTACK
    | Stack used (prev) :  00000071 00000024
  02    __flashcpy
        | Stack used (prev) :  00000071 00000024
        | + function block  :  00000000 00000002
  02    __memclr
        | Stack used (prev) :  00000071 00000024
        | + function block  :  00000000 00000002
  01  __segment_init
      | Stack used (prev) :  00000071 00000026
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  00000071 00000028



                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 5 283 bytes of CODE memory (+             52 range fill )
 3 598 bytes of DATA memory (+ 39 absolute )

Errors: none
Warnings: 1

